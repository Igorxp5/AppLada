version: '3.7'
services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx:/etc/nginx/conf.d/
    depends_on:
      - webapp
      - dev-webapp
      - api
      - dev
      - test
  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ./tmp/database:/var/lib/postgresql/data
    ports:
      - '8000:5432'
  webapp:
    container_name: webapp
    image: applada_webapp
    build:
      context: './webapp'
    expose:
      - 3000
  dev-webapp:
    container_name: dev-webapp
    image: applada_webapp
    build:
      context: './webapp'
    command: npm start
    volumes:
      - ./webapp:/webapp
    expose:
      - 3000
    depends_on:
      - webapp
  api:
    container_name: api
    image: applada
    build: 
      context: './api'
    command: bash -c "rm -f tmp/pids/server.pid && (rails db:migrate || rails db:setup && rails db:migrate) && rails server --binding=0.0.0.0 --port=80 -e production"
    environment:
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        RAILS_ENV: production
    volumes:
      - ./tmp/api:/tmp
    expose:
       - 80
    depends_on:  
      - db
  dev:
    container_name: dev
    image: applada
    build: 
      context: './api'
    command: bash -c "rm -f tmp/pids/server.pid && (rails db:migrate RAILS_ENV=development || rails db:setup && rails db:migrate RAILS_ENV=development) && rails server --binding=0.0.0.0 --port=80 -e development"
    environment:
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        RAILS_ENV: development
    volumes:
      - ./api:/api
      - ./tmp/dev:/api/tmp
    expose:
       - 80
    depends_on:
      - db
      - api
  test:
    container_name: test
    image: applada
    build: 
      context: './api'
    command: bash -c "rm -f tmp/pids/server.pid && (rails db:migrate RAILS_ENV=test || rails db:setup && rails db:migrate RAILS_ENV=test) && rails server --binding=0.0.0.0 --port=80 -e test"
    environment:
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        RAILS_ENV: test
    volumes:
      - ./api:/api
      - ./tmp/test:/api/tmp
    expose:
       - 80
    depends_on:
      - db
      - api